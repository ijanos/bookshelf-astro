---
import Layout from "../layouts/Layout.astro";
---

<Layout title="not an admin page">
    <div class="flex flex-col space-y-1 bg-slate-50 rounded-lg p-2">
        <div>
            <label for="openlibrary">search</label>
            <input
                type="search"
                size="42"
                id="openlibrary"
                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2"
            />
        </div>
        <div class="flex">
            <span> Work: </span>
            <select class="font-mono" name="work" id="works"></select>
        </div>

        <textarea
            id="textarea"
            name=""
            rows="32"
            readonly
            class="font-mono font-semibold text-lg text-gray-800 rounded-b-md border border-gray-300 bg-gray-50"
            >
        </textarea>
    </div>
</Layout>

<script>
    const output = document.getElementById("textarea") as HTMLTextAreaElement;
    const search = document.getElementById("openlibrary") as HTMLInputElement;
    const workSelect = document.getElementById("works") as HTMLSelectElement;
    let works;

    search.addEventListener("change", async (event) => {
        workSelect.replaceChildren();
        const queryString = (event.target as HTMLInputElement).value.trim().toLocaleLowerCase().replaceAll(" ", "+");
        output.textContent = "loading...";

        const response = await fetch(
            `https://openlibrary.org/search.json?q=${queryString}`
        );

        if (response.status != 200) {
            output.textContent = `API error ${response.status}`;
            return;
        }
        const jsonResponse = await response.json();
        works = jsonResponse.docs.sort((w1, w2) => w1.first_publish_year - w2.first_publish_year);
        works.forEach((w, index) => {
            const author = w.author_name?.join(", ");
            workSelect.add(new Option(`${w.first_publish_year} - ${w.title} -- ${author} -- ${w.key}`, index));
        });
        output.textContent += JSON.stringify(works, null, 2) + ",";
    });

    workSelect.addEventListener("change", () => {
        const work = works[workSelect.selectedIndex];

        const ret = {
            title: work.title,
            read: "",
            author: work.author_name,
            published: work.first_publish_year,
            pages: work.number_of_pages_median,
            tags: [],
            id: {
                olid: work.key.split("/").pop()
            },
            language: "ENG"
        };

        output.textContent = JSON.stringify(ret, null, 2) + ",";
    });
</script>
